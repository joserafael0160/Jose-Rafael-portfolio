---
import HTMLIcon from "../assets/images/icons/HTMLIcon.astro"
import PostCSSIcon from "../assets/images/icons/PostCSSIcon.astro"
import JavaScriptIcon from "../assets/images/icons/JavaScriptIcon.astro"
import ViteIcon from "../assets/images/icons/ViteIcon.astro"
import ReactIcon from "../assets/images/icons/ReactIcon.astro"
import GitHubIcon from "../assets/images/icons/GitHubIcon.astro"
import LinkIcon from "../assets/images/icons/LinkIcon.astro"
import LinkButton from "./LinkButton.astro"
import { Image } from "astro:assets"
import jrlinksIMG from "../assets/images/projects/jrlinks.webp"
import CalculatorIMG from "../assets/images/projects/calculator.webp"
import TicTacToeIMG from "../assets/images/projects/tic-tac-toe.webp"
import MovieFinderIMG from "../assets/images/projects/movie-finder.webp"
import ECommerceIMG from "../assets/images/projects/e-commerce.webp"

const TAGS = {
  HTML: {
    name: "HTML",
    class: "bg-orange-900 text-white",
    icon: HTMLIcon
  },
  POSTCSS: {
    name: "PostCSS",
    class: "bg-red-900 text-white",
    icon: PostCSSIcon
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-yellow-800 text-white",
    icon: JavaScriptIcon
  },
  VITE: {
    name: "Vite",
    class: "bg-blue-900 text-white",
    icon: ViteIcon
  },
  REACT: {
    name: "React",
    class: "bg-blue-800 text-white",
    icon: ReactIcon
  },
}

const PROJECTS = [
  {
    title: "E-commerce",
    description: "In this E-commerce, you can explore a wide variety of products, from clothing for men and women to electronic equipment and jewelry. Use our filters by category or minimum price to find what you need. Additionally, in this project, I utilized the following features with the intention of practicing my React skills: I created an interface to display a list of products obtained from a JSON file. It's responsive. I implemented filters so that users can select a specific category or set a price range. I used useContext to manage the global state of the application. Users can add, remove, and modify the quantity of products in the cart, and these changes are automatically synchronized with the product list. To improve usability and convenience, I stored the cart in localStorage, allowing users to resume their selection even after closing the page. üõíüåü",
    link: "https://joserafael0160.github.io/E-commerce/",
    github: "https://github.com/joserafael0160/E-commerce",
    image: ECommerceIMG,
    altImage: "E-commerce",
    tags: [TAGS.POSTCSS, TAGS.REACT, TAGS.VITE]

  },
  {
    title: "Movie Finder",
    description: "With this tool, you can explore and search for your favorite films. Filter by release year and discover new cinematic gems. Enjoy the magic of cinema. In my project, I used the OMDb (Open Movie Database) API to retrieve movie information. Additionally, It's responsive. To improve efficiency and the user experience, I implemented logic to prevent duplicate searches and performed automatic searches while the user types in the search field. I also utilized the ‚Äúdebounce‚Äù technique to avoid continuous searches while the user is still typing, which could overload the API or impact application performance. üé•üçø",
    link: "https://joserafael0160.github.io/Movie-Finder/",
    github: "https://github.com/joserafael0160/Movie-Finder",
    image: MovieFinderIMG,
    altImage: "Movie Finder",
    tags: [TAGS.POSTCSS, TAGS.REACT, TAGS.VITE]
    
  },
  {
    title: "Tic tac toe",
    description: "Welcome to my Tic Tac Toe web app! I‚Äôve created this classic game to showcase my skills and problem-solving abilities. As for the implementation, I‚Äôve used React to build the user interface. The algorithm for determining if a player has won is essential for the game‚Äôs functionality. By checking winning combinations (via an algorithm), we ensure that the game correctly declares the winner. Additionally, I‚Äôve implemented an algorithm to detect ties, preventing the game from continuing indefinitely. If all squares are filled and there‚Äôs no winner, a tie is declared. And to add a festive touch, I‚Äôve included a confetti animation at the end of the game. Enjoy playing! üéÆ‚ú®",
    link: "https://joserafael0160.github.io/tic-tac-toe/",
    github: "https://github.com/joserafael0160/tic-tac-toe",
    image: TicTacToeIMG,
    altImage: "Tic tac toe",
    tags: [TAGS.POSTCSS, TAGS.REACT, TAGS.VITE]
    
  },
  {
    title: "JRLinks",
    description: "I have created this page with the intention of having all my links in one place. You can find me on all my platforms here. üíú",
    link: "https://jrlinks.pages.dev/",
    github: "https://github.com/joserafael0160/JRLinks",
    image: jrlinksIMG,
    altImage: "JRLinks",
    tags: [TAGS.HTML, TAGS.POSTCSS, TAGS.JAVASCRIPT, TAGS.VITE]
  },
  {
    title: "Calculator",
    description: "This web page has been meticulously crafted to serve as a functional online calculator. It‚Äôs designed for quick calculations, making it a handy tool for anyone in need of basic mathematical operations. The calculator is easy to use and accessible to all. üíñ",
    link: "https://joserafael0160.github.io/Calculator/",
    github: "https://github.com/joserafael0160/Calculator",
    image: CalculatorIMG,
    altImage: "Calculator",
    tags: [TAGS.HTML, TAGS.POSTCSS, TAGS.JAVASCRIPT, TAGS.VITE]
  }
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, altImage, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
      <div class="w-full md:w-1/2">
        <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
          <Image alt={altImage} class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="eager" src={image} />
        </div>
      </div>

      <div class="w-full md:w-1/2 md:max-w-lg">
        <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
        {title}
        </h3>
        <div class="flex flex-wrap mt-2">
          <ul class="flex flex-row flex-wrap mb-2 gap-2">
            {tags.map((tag) => (
              <li>
                <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                >
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </ul>
        <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
        <footer class="flex items-end justify-start mt-4 gap-x-4">
            {github && (
              <LinkButton href={github} title=`${title} project repository`>
                <GitHubIcon class="size-6" />
                Code

              </LinkButton>
            )}
            {link && (
              <LinkButton href={link} title=`${title} website`>
                <LinkIcon class="size-4" />
                Preview
              </LinkButton>
            )}
          </footer>
        </div>
      </div>
    </article>
    ))
  }
</div>


